{"ast":null,"code":"import _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\n\nvar RealtimeSubscription = /*#__PURE__*/function () {\n  function RealtimeSubscription(topic) {\n    var _this = this;\n\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var socket = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, RealtimeSubscription);\n\n    this.topic = topic;\n    this.params = params;\n    this.socket = socket;\n    this.bindings = [];\n    this.state = CHANNEL_STATES.closed;\n    this.joinedOnce = false;\n    this.pushBuffer = [];\n    this.timeout = this.socket.timeout;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.rejoinTimer = new Timer(function () {\n      return _this.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive('ok', function () {\n      _this.state = CHANNEL_STATES.joined;\n\n      _this.rejoinTimer.reset();\n\n      _this.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n\n      _this.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this.rejoinTimer.reset();\n\n      _this.socket.log('channel', \"close \".concat(_this.topic, \" \").concat(_this.joinRef()));\n\n      _this.state = CHANNEL_STATES.closed;\n\n      _this.socket.remove(_this);\n    });\n    this.onError(function (reason) {\n      if (_this.isLeaving() || _this.isClosed()) {\n        return;\n      }\n\n      _this.socket.log('channel', \"error \".concat(_this.topic), reason);\n\n      _this.state = CHANNEL_STATES.errored;\n\n      _this.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive('timeout', function () {\n      if (!_this.isJoining()) {\n        return;\n      }\n\n      _this.socket.log('channel', \"timeout \".concat(_this.topic), _this.joinPush.timeout);\n\n      _this.state = CHANNEL_STATES.errored;\n\n      _this.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this.trigger(_this.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(RealtimeSubscription, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.joinedOnce) {\n        throw \"tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({\n        event: event,\n        callback: callback\n      });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\".concat(event, \"' to '\").concat(this.topic, \"' before joining. Use channel.subscribe() before pushing events\");\n      }\n\n      var pushEvent = new Push(this, event, payload, timeout);\n\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n  }, {\n    key: \"updateJoinPayload\",\n    value: function updateJoinPayload(payload) {\n      this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var _this2 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      this.state = CHANNEL_STATES.leaving;\n\n      var onClose = function onClose() {\n        _this2.socket.log('channel', \"leave \".concat(_this2.topic));\n\n        _this2.trigger(CHANNEL_EVENTS.close, 'leave', _this2.joinRef());\n      }; // Destroy joinPush to avoid connection timeouts during unscription phase\n\n\n      this.joinPush.destroy();\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive('ok', function () {\n        return onClose();\n      }).receive('timeout', function () {\n        return onClose();\n      });\n      leavePush.send();\n\n      if (!this.canPush()) {\n        leavePush.trigger('ok', {});\n      }\n\n      return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.isLeaving()) {\n        return;\n      }\n\n      this.socket.leaveOpenTopic(this.topic);\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close,\n          error = CHANNEL_EVENTS.error,\n          leave = CHANNEL_EVENTS.leave,\n          join = CHANNEL_EVENTS.join;\n      var events = [close, error, leave, join];\n\n      if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n\n      var handledPayload = this.onMessage(event, payload, ref);\n\n      if (payload && !handledPayload) {\n        throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n      }\n\n      this.bindings.filter(function (bind) {\n        // Bind all events if the user specifies a wildcard.\n        if (bind.event === '*') {\n          return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n        } else {\n          return bind.event === event;\n        }\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\".concat(ref);\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return RealtimeSubscription;\n}();\n\nexport { RealtimeSubscription as default };","map":{"version":3,"mappings":"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","names":["CHANNEL_EVENTS","CHANNEL_STATES","Push","Timer","RealtimeSubscription","topic","params","socket","closed","timeout","joinPush","join","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","receive","state","joined","reset","pushBuffer","forEach","pushEvent","send","onClose","log","joinRef","remove","onError","reason","isLeaving","isClosed","errored","scheduleTimeout","isJoining","on","reply","payload","ref","trigger","replyEventName","isConnected","rejoin","joinedOnce","callback","close","error","event","bindings","push","filter","bind","isJoined","canPush","startTimeout","updatePayload","leaving","destroy","leavePush","leave","leaveOpenTopic","joining","resend","events","indexOf","handledPayload","onMessage","type","map"],"sourceRoot":"","sources":["../../src/RealtimeSubscription.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}