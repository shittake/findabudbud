{"ast":null,"code":"/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = encodeURIComponent;\n  /* eslint-disable-next-line no-control-regex */\n\n  var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\n\n\nfunction isSecureEnvironment(req) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available');\n  }\n\n  var host = req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0] || req.headers.host;\n\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Serialize a cookie to a string.\n */\n\n\nfunction serializeCookie(cookie, secure) {\n  var _a, _b, _c;\n\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure: secure,\n    path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n    domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n    sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax'\n  });\n}\n/**\n * Get Cookie Header strings.\n */\n\n\nexport function getCookieString(req, res, cookies) {\n  var strCookies = cookies.map(function (c) {\n    return serializeCookie(c, isSecureEnvironment(req));\n  });\n  var previousCookies = res.getHeader('Set-Cookie');\n\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies);\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies);\n    }\n  }\n\n  return strCookies;\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookies(req, res, cookies) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookie(req, res, cookie) {\n  setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n  setCookie(req, res, {\n    name: name,\n    value: '',\n    maxAge: -1\n  });\n}","map":{"version":3,"sources":["../../../src/lib/cookies.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map"]},"metadata":{},"sourceType":"module"}