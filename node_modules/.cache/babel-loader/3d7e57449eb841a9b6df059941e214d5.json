{"ast":null,"code":"import _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\n\nvar PostgrestClient = /*#__PURE__*/function () {\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url  URL of the PostgREST endpoint.\n   * @param headers  Custom headers.\n   * @param schema  Postgres schema to switch to.\n   */\n  function PostgrestClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        schema = _ref.schema,\n        fetch = _ref.fetch,\n        throwOnError = _ref.throwOnError;\n\n    _classCallCheck(this, PostgrestClient);\n\n    this.url = url;\n    this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n    this.schema = schema;\n    this.fetch = fetch;\n    this.shouldThrowOnError = throwOnError;\n  }\n  /**\n   * Authenticates the request with JWT.\n   *\n   * @param token  The JWT token to use.\n   */\n\n\n  _createClass(PostgrestClient, [{\n    key: \"auth\",\n    value: function auth(token) {\n      this.headers['Authorization'] = \"Bearer \".concat(token);\n      return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n\n  }, {\n    key: \"from\",\n    value: function from(table) {\n      var url = \"\".concat(this.url, \"/\").concat(table);\n      return new PostgrestQueryBuilder(url, {\n        headers: this.headers,\n        schema: this.schema,\n        fetch: this.fetch,\n        shouldThrowOnError: this.shouldThrowOnError\n      });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n\n  }, {\n    key: \"rpc\",\n    value: function rpc(fn, params) {\n      var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref2$head = _ref2.head,\n          head = _ref2$head === void 0 ? false : _ref2$head,\n          _ref2$count = _ref2.count,\n          count = _ref2$count === void 0 ? null : _ref2$count;\n\n      var url = \"\".concat(this.url, \"/rpc/\").concat(fn);\n      return new PostgrestRpcBuilder(url, {\n        headers: this.headers,\n        schema: this.schema,\n        fetch: this.fetch,\n        shouldThrowOnError: this.shouldThrowOnError\n      }).rpc(params, {\n        head: head,\n        count: count\n      });\n    }\n  }]);\n\n  return PostgrestClient;\n}();\n\nexport { PostgrestClient as default };","map":{"version":3,"mappings":";;AAAA,OAAOA,qBAAP,MAAkC,6BAAlC;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AAEA,SAASC,eAAT,QAAgC,iBAAhC;;IAGqBC,e;EAOnB;;;;;;;EAOA,yBACEC,GADF,EAYQ;IAAA,+EAAF,EAAE;IAAA,wBATJC,OASI;IAAA,IATJA,OASI,6BATM,EASN;IAAA,IARJC,MAQI,QARJA,MAQI;IAAA,IAPJC,KAOI,QAPJA,KAOI;IAAA,IANJC,YAMI,QANJA,YAMI;;IAAA;;IAEN,KAAKJ,GAAL,GAAWA,GAAX;IACA,KAAKC,OAAL,GAAYI,gCAAQP,eAAR,GAA4BG,OAA5B,CAAZ;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKG,kBAAL,GAA0BF,YAA1B;EACD;EAED;;;;;;;;;WAKA,cAAKG,KAAL,EAAkB;MAChB,KAAKN,OAAL,CAAa,eAAb,qBAA0CM,KAA1C;MACA,OAAO,IAAP;IACD;IAED;;;;;;;;WAKA,cAAcC,KAAd,EAA2B;MACzB,IAAMR,GAAG,aAAM,KAAKA,GAAX,cAAkBQ,KAAlB,CAAT;MACA,OAAO,IAAIZ,qBAAJ,CAA6BI,GAA7B,EAAkC;QACvCC,OAAO,EAAE,KAAKA,OADyB;QAEvCC,MAAM,EAAE,KAAKA,MAF0B;QAGvCC,KAAK,EAAE,KAAKA,KAH2B;QAIvCG,kBAAkB,EAAE,KAAKA;MAJc,CAAlC,CAAP;IAMD;IAED;;;;;;;;;;;WAQA,aACEG,EADF,EAEEC,MAFF,EASQ;MAAA,gFAAF,EAAE;MAAA,uBALJC,IAKI;MAAA,IALJA,IAKI,2BALG,KAKH;MAAA,wBAJJC,KAII;MAAA,IAJJA,KAII,4BAJI,IAIJ;;MAEN,IAAMZ,GAAG,aAAM,KAAKA,GAAX,kBAAsBS,EAAtB,CAAT;MACA,OAAO,IAAIZ,mBAAJ,CAA2BG,GAA3B,EAAgC;QACrCC,OAAO,EAAE,KAAKA,OADuB;QAErCC,MAAM,EAAE,KAAKA,MAFwB;QAGrCC,KAAK,EAAE,KAAKA,KAHyB;QAIrCG,kBAAkB,EAAE,KAAKA;MAJY,CAAhC,EAKJO,GALI,CAKAH,MALA,EAKQ;QAAEC,IAAI,EAAJA,IAAF;QAAQC,KAAK,EAALA;MAAR,CALR,CAAP;IAMD;;;;;;SAtFkBb,e","names":["PostgrestQueryBuilder","PostgrestRpcBuilder","DEFAULT_HEADERS","PostgrestClient","url","headers","schema","fetch","throwOnError","Object","shouldThrowOnError","token","table","fn","params","head","count","rpc"],"sourceRoot":"","sources":["../../src/PostgrestClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}