{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _getErrorMessage = function _getErrorMessage(err) {\n  return err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n};\n\nvar handleError = function handleError(error, reject) {\n  if (typeof error.json !== 'function') {\n    return reject(error);\n  }\n\n  error.json().then(function (err) {\n    return reject({\n      message: _getErrorMessage(err),\n      status: (error === null || error === void 0 ? void 0 : error.status) || 500\n    });\n  });\n};\n\nvar _getRequestParams = function _getRequestParams(method, options, parameters, body) {\n  var params = {\n    method: method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n\n  if (method === 'GET') {\n    return params;\n  }\n\n  params.headers = Object.assign({\n    'Content-Type': 'application/json'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\n\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fetcher(url, _getRequestParams(method, options, parameters, body)).then(function (result) {\n                if (!result.ok) throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson) return resolve(result);\n                return result.json();\n              }).then(function (data) {\n                return resolve(data);\n              }).catch(function (error) {\n                return handleError(error, reject);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexport function get(fetcher, url, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _handleRequest(fetcher, 'GET', url, options, parameters));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\nexport function post(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _handleRequest(fetcher, 'POST', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\nexport function put(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _handleRequest(fetcher, 'PUT', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}\nexport function remove(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _handleRequest(fetcher, 'DELETE', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n}","map":{"version":3,"mappings":"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","names":["_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","handleError","reject","json","then","status","_getRequestParams","method","options","parameters","body","params","headers","Object","_handleRequest","fetcher","url","Promise","resolve","result","ok","noResolveJson","data","catch","get","post","put","remove"],"sourceRoot":"","sources":["../../../src/lib/fetch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}