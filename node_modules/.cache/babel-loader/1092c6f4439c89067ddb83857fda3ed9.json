{"ast":null,"code":"import _slicedToArray from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\n\nvar PostgrestRpcBuilder = /*#__PURE__*/function (_PostgrestBuilder) {\n  _inherits(PostgrestRpcBuilder, _PostgrestBuilder);\n\n  var _super = _createSuper(PostgrestRpcBuilder);\n\n  function PostgrestRpcBuilder(url) {\n    var _this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        schema = _ref.schema,\n        fetch = _ref.fetch,\n        shouldThrowOnError = _ref.shouldThrowOnError;\n\n    _classCallCheck(this, PostgrestRpcBuilder);\n\n    _this = _super.call(this, {\n      fetch: fetch,\n      shouldThrowOnError: shouldThrowOnError\n    });\n    _this.url = new URL(url);\n    _this.headers = Object.assign({}, headers);\n    _this.schema = schema;\n    return _this;\n  }\n  /**\n   * Perform a function call.\n   */\n\n\n  _createClass(PostgrestRpcBuilder, [{\n    key: \"rpc\",\n    value: function rpc(params) {\n      var _this2 = this;\n\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$head = _ref2.head,\n          head = _ref2$head === void 0 ? false : _ref2$head,\n          _ref2$count = _ref2.count,\n          count = _ref2$count === void 0 ? null : _ref2$count;\n\n      if (head) {\n        this.method = 'HEAD';\n\n        if (params) {\n          Object.entries(params).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n                name = _ref4[0],\n                value = _ref4[1];\n\n            _this2.url.searchParams.append(name, value);\n          });\n        }\n      } else {\n        this.method = 'POST';\n        this.body = params;\n      }\n\n      if (count) {\n        if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += \",count=\".concat(count);else this.headers['Prefer'] = \"count=\".concat(count);\n      }\n\n      return new PostgrestFilterBuilder(this);\n    }\n  }]);\n\n  return PostgrestRpcBuilder;\n}(PostgrestBuilder);\n\nexport { PostgrestRpcBuilder as default };","map":{"version":3,"sources":["../../../src/lib/PostgrestRpcBuilder.ts"],"names":[],"mappings":";;;;;AAAA,SAAgB,gBAAhB,QAAwC,SAAxC;AACA,OAAO,sBAAP,MAAmC,0BAAnC;;IAEqB,mB;;;;;EACnB,6BACE,GADF,EAYQ;IAAA;;IAAA,+EAAF,EAAE;IAAA,wBATJ,OASI;IAAA,IATJ,OASI,6BATM,EASN;IAAA,IARJ,MAQI,QARJ,MAQI;IAAA,IAPJ,KAOI,QAPJ,KAOI;IAAA,IANJ,kBAMI,QANJ,kBAMI;;IAAA;;IAEN,0BAAO;MAAE,KAAK,EAAL,KAAF;MAAS,kBAAkB,EAAlB;IAAT,CAAP;IACA,MAAK,GAAL,GAAW,IAAI,GAAJ,CAAQ,GAAR,CAAX;IACA,MAAK,OAAL,GAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,OAAR,CAAZ;IACA,MAAK,MAAL,GAAc,MAAd;IALM;EAMP;EAED;;AAEG;;;;;WACH,aACE,MADF,EAQQ;MAAA;;MAAA,gFAAF,EAAE;MAAA,uBALJ,IAKI;MAAA,IALJ,IAKI,2BALG,KAKH;MAAA,wBAJJ,KAII;MAAA,IAJJ,KAII,4BAJI,IAIJ;;MAEN,IAAI,IAAJ,EAAU;QACR,KAAK,MAAL,GAAc,MAAd;;QAEA,IAAI,MAAJ,EAAY;UACV,MAAM,CAAC,OAAP,CAAe,MAAf,EAAuB,OAAvB,CAA+B,iBAAkB;YAAA;YAAA,IAAhB,IAAgB;YAAA,IAAV,KAAU;;YAC/C,MAAI,CAAC,GAAL,CAAS,YAAT,CAAsB,MAAtB,CAA6B,IAA7B,EAAmC,KAAnC;UACD,CAFD;QAGD;MACF,CARD,MAQO;QACL,KAAK,MAAL,GAAc,MAAd;QACA,KAAK,IAAL,GAAY,MAAZ;MACD;;MAED,IAAI,KAAJ,EAAW;QACT,IAAI,KAAK,OAAL,CAAa,QAAb,MAA2B,SAA/B,EAA0C,KAAK,OAAL,CAAa,QAAb,sBAAoC,KAApC,EAA1C,KACK,KAAK,OAAL,CAAa,QAAb,oBAAkC,KAAlC;MACN;;MAED,OAAO,IAAI,sBAAJ,CAA2B,IAA3B,CAAP;IACD;;;;EArDiD,gB;;SAA/B,mB","sourceRoot":"","sourcesContent":["import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map"]},"metadata":{},"sourceType":"module"}