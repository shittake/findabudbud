{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid, setItemAsync, removeItemAsync, getItemSynchronously, getItemAsync } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY, EXPIRY_MARGIN, NETWORK_FAILURE } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\n\nvar DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS\n};\n\nvar GoTrueClient = /*#__PURE__*/function () {\n  /**\n   * Create a new client for use in the browser.\n   * @param options.url The URL of the GoTrue server.\n   * @param options.headers Any additional headers to send to the GoTrue server.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.cookieOptions\n   * @param options.fetch A custom fetch implementation.\n   */\n  function GoTrueClient(options) {\n    _classCallCheck(this, GoTrueClient);\n\n    this.stateChangeEmitters = new Map();\n    this.networkRetries = 0;\n    var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.currentUser = null;\n    this.currentSession = null;\n    this.autoRefreshToken = settings.autoRefreshToken;\n    this.persistSession = settings.persistSession;\n    this.multiTab = settings.multiTab;\n    this.localStorage = settings.localStorage || globalThis.localStorage;\n    this.api = new GoTrueApi({\n      url: settings.url,\n      headers: settings.headers,\n      cookieOptions: settings.cookieOptions,\n      fetch: settings.fetch\n    });\n\n    this._recoverSession();\n\n    this._recoverAndRefresh();\n\n    this._listenForMultiTabEvents();\n\n    this._handleVisibilityChange();\n\n    if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n      // Handle the OAuth redirect\n      this.getSessionFromUrl({\n        storeSession: true\n      }).then(function (_ref) {\n        var error = _ref.error;\n\n        if (error) {\n          console.error('Error getting session from URL.', error);\n        }\n      });\n    }\n  }\n  /**\n   * Creates a new user.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param phone The user's phone number.\n   * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n   * @param data Optional user metadata.\n   */\n\n\n  _createClass(GoTrueClient, [{\n    key: \"signUp\",\n    value: function signUp(_ref2) {\n      var email = _ref2.email,\n          password = _ref2.password,\n          phone = _ref2.phone;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref3, data, error, session, user;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                this._removeSession();\n\n                if (!(phone && password)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.api.signUpWithPhone(phone, password, {\n                  data: options.data,\n                  captchaToken: options.captchaToken\n                });\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return this.api.signUpWithEmail(email, password, {\n                  redirectTo: options.redirectTo,\n                  data: options.data,\n                  captchaToken: options.captchaToken\n                });\n\n              case 10:\n                _context.t0 = _context.sent;\n\n              case 11:\n                _ref3 = _context.t0;\n                data = _ref3.data;\n                error = _ref3.error;\n\n                if (!error) {\n                  _context.next = 16;\n                  break;\n                }\n\n                throw error;\n\n              case 16:\n                if (data) {\n                  _context.next = 18;\n                  break;\n                }\n\n                throw 'An error occurred on sign up.';\n\n              case 18:\n                session = null;\n                user = null;\n\n                if (data.access_token) {\n                  session = data;\n                  user = session.user;\n\n                  this._saveSession(session);\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n                }\n\n                if (data.id) {\n                  user = data;\n                }\n\n                return _context.abrupt(\"return\", {\n                  user: user,\n                  session: session,\n                  error: null\n                });\n\n              case 25:\n                _context.prev = 25;\n                _context.t1 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: _context.t1\n                });\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 25]]);\n      }));\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n\n  }, {\n    key: \"signIn\",\n    value: function signIn(_ref4) {\n      var email = _ref4.email,\n          phone = _ref4.phone,\n          password = _ref4.password,\n          refreshToken = _ref4.refreshToken,\n          provider = _ref4.provider,\n          oidc = _ref4.oidc;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$this$api$sendM, error, _yield$this$api$sendM2, _error, _yield$this$_callRefr, _error2;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                this._removeSession();\n\n                if (!(email && !password)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return this.api.sendMagicLinkEmail(email, {\n                  redirectTo: options.redirectTo,\n                  shouldCreateUser: options.shouldCreateUser,\n                  captchaToken: options.captchaToken\n                });\n\n              case 5:\n                _yield$this$api$sendM = _context2.sent;\n                error = _yield$this$api$sendM.error;\n                return _context2.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: error\n                });\n\n              case 8:\n                if (!(email && password)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._handleEmailSignIn(email, password, {\n                  redirectTo: options.redirectTo\n                }));\n\n              case 10:\n                if (!(phone && !password)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.next = 13;\n                return this.api.sendMobileOTP(phone, {\n                  shouldCreateUser: options.shouldCreateUser,\n                  captchaToken: options.captchaToken\n                });\n\n              case 13:\n                _yield$this$api$sendM2 = _context2.sent;\n                _error = _yield$this$api$sendM2.error;\n                return _context2.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: _error\n                });\n\n              case 16:\n                if (!(phone && password)) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._handlePhoneSignIn(phone, password));\n\n              case 18:\n                if (!refreshToken) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.next = 21;\n                return this._callRefreshToken(refreshToken);\n\n              case 21:\n                _yield$this$_callRefr = _context2.sent;\n                _error2 = _yield$this$_callRefr.error;\n\n                if (!_error2) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                throw _error2;\n\n              case 25:\n                return _context2.abrupt(\"return\", {\n                  user: this.currentUser,\n                  session: this.currentSession,\n                  error: null\n                });\n\n              case 26:\n                if (!provider) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._handleProviderSignIn(provider, {\n                  redirectTo: options.redirectTo,\n                  scopes: options.scopes\n                }));\n\n              case 28:\n                if (!oidc) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._handleOpenIDConnectSignIn(oidc));\n\n              case 30:\n                throw new Error(\"You must provide either an email, phone number, a third-party provider or OpenID Connect.\");\n\n              case 33:\n                _context2.prev = 33;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: _context2.t0\n                });\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 33]]);\n      }));\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param type The user's verification type.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n\n  }, {\n    key: \"verifyOTP\",\n    value: function verifyOTP(params) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$this$api$verif, data, error, session, user;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                this._removeSession();\n\n                _context3.next = 4;\n                return this.api.verifyOTP(params, options);\n\n              case 4:\n                _yield$this$api$verif = _context3.sent;\n                data = _yield$this$api$verif.data;\n                error = _yield$this$api$verif.error;\n\n                if (!error) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                throw error;\n\n              case 9:\n                if (data) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                throw 'An error occurred on token verification.';\n\n              case 11:\n                session = null;\n                user = null;\n\n                if (data.access_token) {\n                  session = data;\n                  user = session.user;\n\n                  this._saveSession(session);\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n                }\n\n                if (data.id) {\n                  user = data;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  user: user,\n                  session: session,\n                  error: null\n                });\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: _context3.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18]]);\n      }));\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n\n  }, {\n    key: \"user\",\n    value: function user() {\n      return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n\n  }, {\n    key: \"session\",\n    value: function session() {\n      return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n\n  }, {\n    key: \"refreshSession\",\n    value: function refreshSession() {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _yield$this$_callRefr2, error;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n\n                if ((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error('Not logged in.');\n\n              case 3:\n                _context4.next = 5;\n                return this._callRefreshToken();\n\n              case 5:\n                _yield$this$_callRefr2 = _context4.sent;\n                error = _yield$this$_callRefr2.error;\n\n                if (!error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                throw error;\n\n              case 9:\n                return _context4.abrupt(\"return\", {\n                  data: this.currentSession,\n                  user: this.currentUser,\n                  error: null\n                });\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  error: _context4.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 12]]);\n      }));\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(attributes) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _yield$this$api$updat, user, error, session;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n\n                if ((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                throw new Error('Not logged in.');\n\n              case 3:\n                _context5.next = 5;\n                return this.api.updateUser(this.currentSession.access_token, attributes);\n\n              case 5:\n                _yield$this$api$updat = _context5.sent;\n                user = _yield$this$api$updat.user;\n                error = _yield$this$api$updat.error;\n\n                if (!error) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                throw error;\n\n              case 10:\n                if (user) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw Error('Invalid user data.');\n\n              case 12:\n                session = Object.assign(Object.assign({}, this.currentSession), {\n                  user: user\n                });\n\n                this._saveSession(session);\n\n                this._notifyAllSubscribers('USER_UPDATED');\n\n                return _context5.abrupt(\"return\", {\n                  data: user,\n                  user: user,\n                  error: null\n                });\n\n              case 18:\n                _context5.prev = 18;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  error: _context5.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 18]]);\n      }));\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n\n  }, {\n    key: \"setSession\",\n    value: function setSession(refresh_token) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _yield$this$api$refre, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n\n                if (refresh_token) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                throw new Error('No current session.');\n\n              case 3:\n                _context6.next = 5;\n                return this.api.refreshAccessToken(refresh_token);\n\n              case 5:\n                _yield$this$api$refre = _context6.sent;\n                data = _yield$this$api$refre.data;\n                error = _yield$this$api$refre.error;\n\n                if (!error) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  session: null,\n                  error: error\n                });\n\n              case 10:\n                this._saveSession(data);\n\n                this._notifyAllSubscribers('SIGNED_IN');\n\n                return _context6.abrupt(\"return\", {\n                  session: data,\n                  error: null\n                });\n\n              case 15:\n                _context6.prev = 15;\n                _context6.t0 = _context6[\"catch\"](0);\n                return _context6.abrupt(\"return\", {\n                  error: _context6.t0,\n                  session: null\n                });\n\n              case 18:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 15]]);\n      }));\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n\n  }, {\n    key: \"setAuth\",\n    value: function setAuth(access_token) {\n      this.currentSession = Object.assign(Object.assign({}, this.currentSession), {\n        access_token: access_token,\n        token_type: 'bearer',\n        user: this.user()\n      });\n\n      this._notifyAllSubscribers('TOKEN_REFRESHED');\n\n      return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n\n  }, {\n    key: \"getSessionFromUrl\",\n    value: function getSessionFromUrl(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var error_description, provider_token, access_token, expires_in, refresh_token, token_type, timeNow, expires_at, _yield$this$api$getUs, user, error, session, recoveryMode;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n\n                if (isBrowser()) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                throw new Error('No browser detected.');\n\n              case 3:\n                error_description = getParameterByName('error_description');\n\n                if (!error_description) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error(error_description);\n\n              case 6:\n                provider_token = getParameterByName('provider_token');\n                access_token = getParameterByName('access_token');\n\n                if (access_token) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                throw new Error('No access_token detected.');\n\n              case 10:\n                expires_in = getParameterByName('expires_in');\n\n                if (expires_in) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                throw new Error('No expires_in detected.');\n\n              case 13:\n                refresh_token = getParameterByName('refresh_token');\n\n                if (refresh_token) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                throw new Error('No refresh_token detected.');\n\n              case 16:\n                token_type = getParameterByName('token_type');\n\n                if (token_type) {\n                  _context7.next = 19;\n                  break;\n                }\n\n                throw new Error('No token_type detected.');\n\n              case 19:\n                timeNow = Math.round(Date.now() / 1000);\n                expires_at = timeNow + parseInt(expires_in);\n                _context7.next = 23;\n                return this.api.getUser(access_token);\n\n              case 23:\n                _yield$this$api$getUs = _context7.sent;\n                user = _yield$this$api$getUs.user;\n                error = _yield$this$api$getUs.error;\n\n                if (!error) {\n                  _context7.next = 28;\n                  break;\n                }\n\n                throw error;\n\n              case 28:\n                session = {\n                  provider_token: provider_token,\n                  access_token: access_token,\n                  expires_in: parseInt(expires_in),\n                  expires_at: expires_at,\n                  refresh_token: refresh_token,\n                  token_type: token_type,\n                  user: user\n                };\n\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                  this._saveSession(session);\n\n                  recoveryMode = getParameterByName('type');\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n\n                  if (recoveryMode === 'recovery') {\n                    this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                  }\n                } // Remove tokens from URL\n\n\n                window.location.hash = '';\n                return _context7.abrupt(\"return\", {\n                  data: session,\n                  error: null\n                });\n\n              case 34:\n                _context7.prev = 34;\n                _context7.t0 = _context7[\"catch\"](0);\n                return _context7.abrupt(\"return\", {\n                  data: null,\n                  error: _context7.t0\n                });\n\n              case 37:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 34]]);\n      }));\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var accessToken, _yield$this$api$signO, error;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n\n                this._removeSession();\n\n                this._notifyAllSubscribers('SIGNED_OUT');\n\n                if (!accessToken) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                _context8.next = 6;\n                return this.api.signOut(accessToken);\n\n              case 6:\n                _yield$this$api$signO = _context8.sent;\n                error = _yield$this$api$signO.error;\n\n                if (!error) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  error: error\n                });\n\n              case 10:\n                return _context8.abrupt(\"return\", {\n                  error: null\n                });\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n\n  }, {\n    key: \"onAuthStateChange\",\n    value: function onAuthStateChange(callback) {\n      var _this = this;\n\n      try {\n        var id = uuid();\n        var subscription = {\n          id: id,\n          callback: callback,\n          unsubscribe: function unsubscribe() {\n            _this.stateChangeEmitters.delete(id);\n          }\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        return {\n          data: subscription,\n          error: null\n        };\n      } catch (e) {\n        return {\n          data: null,\n          error: e\n        };\n      }\n    }\n  }, {\n    key: \"_handleEmailSignIn\",\n    value: function _handleEmailSignIn(email, password) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _a, _b;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _yield$this$api$signI, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return this.api.signInWithEmail(email, password, {\n                  redirectTo: options.redirectTo\n                });\n\n              case 3:\n                _yield$this$api$signI = _context9.sent;\n                data = _yield$this$api$signI.data;\n                error = _yield$this$api$signI.error;\n\n                if (!(error || !data)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  session: null,\n                  error: error\n                });\n\n              case 8:\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                  this._saveSession(data);\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: data,\n                  user: data.user,\n                  session: data,\n                  error: null\n                });\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](0);\n                return _context9.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  session: null,\n                  error: _context9.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 12]]);\n      }));\n    }\n  }, {\n    key: \"_handlePhoneSignIn\",\n    value: function _handlePhoneSignIn(phone, password) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _yield$this$api$signI2, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return this.api.signInWithPhone(phone, password);\n\n              case 3:\n                _yield$this$api$signI2 = _context10.sent;\n                data = _yield$this$api$signI2.data;\n                error = _yield$this$api$signI2.error;\n\n                if (!(error || !data)) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  session: null,\n                  error: error\n                });\n\n              case 8:\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                  this._saveSession(data);\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n                }\n\n                return _context10.abrupt(\"return\", {\n                  data: data,\n                  user: data.user,\n                  session: data,\n                  error: null\n                });\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](0);\n                return _context10.abrupt(\"return\", {\n                  data: null,\n                  user: null,\n                  session: null,\n                  error: _context10.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 12]]);\n      }));\n    }\n  }, {\n    key: \"_handleProviderSignIn\",\n    value: function _handleProviderSignIn(provider) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var url = this.api.getUrlForProvider(provider, {\n        redirectTo: options.redirectTo,\n        scopes: options.scopes\n      });\n\n      try {\n        // try to open on the browser\n        if (isBrowser()) {\n          window.location.href = url;\n        }\n\n        return {\n          provider: provider,\n          url: url,\n          data: null,\n          session: null,\n          user: null,\n          error: null\n        };\n      } catch (e) {\n        // fallback to returning the URL\n        if (url) return {\n          provider: provider,\n          url: url,\n          data: null,\n          session: null,\n          user: null,\n          error: null\n        };\n        return {\n          data: null,\n          user: null,\n          session: null,\n          error: e\n        };\n      }\n    }\n  }, {\n    key: \"_handleOpenIDConnectSignIn\",\n    value: function _handleOpenIDConnectSignIn(_ref5) {\n      var id_token = _ref5.id_token,\n          nonce = _ref5.nonce,\n          client_id = _ref5.client_id,\n          issuer = _ref5.issuer,\n          provider = _ref5.provider;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _yield$this$api$signI3, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!(id_token && nonce && (client_id && issuer || provider))) {\n                  _context11.next = 17;\n                  break;\n                }\n\n                _context11.prev = 1;\n                _context11.next = 4;\n                return this.api.signInWithOpenIDConnect({\n                  id_token: id_token,\n                  nonce: nonce,\n                  client_id: client_id,\n                  issuer: issuer,\n                  provider: provider\n                });\n\n              case 4:\n                _yield$this$api$signI3 = _context11.sent;\n                data = _yield$this$api$signI3.data;\n                error = _yield$this$api$signI3.error;\n\n                if (!(error || !data)) {\n                  _context11.next = 9;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: error\n                });\n\n              case 9:\n                this._saveSession(data);\n\n                this._notifyAllSubscribers('SIGNED_IN');\n\n                return _context11.abrupt(\"return\", {\n                  user: data.user,\n                  session: data,\n                  error: null\n                });\n\n              case 14:\n                _context11.prev = 14;\n                _context11.t0 = _context11[\"catch\"](1);\n                return _context11.abrupt(\"return\", {\n                  user: null,\n                  session: null,\n                  error: _context11.t0\n                });\n\n              case 17:\n                throw new Error(\"You must provide a OpenID Connect provider with your id token and nonce.\");\n\n              case 18:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[1, 14]]);\n      }));\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n\n  }, {\n    key: \"_recoverSession\",\n    value: function _recoverSession() {\n      try {\n        var data = getItemSynchronously(this.localStorage, STORAGE_KEY);\n        if (!data) return null;\n        var currentSession = data.currentSession,\n            expiresAt = data.expiresAt;\n        var timeNow = Math.round(Date.now() / 1000);\n\n        if (expiresAt >= timeNow + EXPIRY_MARGIN && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n          this._saveSession(currentSession);\n\n          this._notifyAllSubscribers('SIGNED_IN');\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n\n  }, {\n    key: \"_recoverAndRefresh\",\n    value: function _recoverAndRefresh() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var _this2 = this;\n\n        var data, currentSession, expiresAt, timeNow, _yield$this$_callRefr3, error;\n\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                _context12.next = 3;\n                return getItemAsync(this.localStorage, STORAGE_KEY);\n\n              case 3:\n                data = _context12.sent;\n\n                if (data) {\n                  _context12.next = 6;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", null);\n\n              case 6:\n                currentSession = data.currentSession, expiresAt = data.expiresAt;\n                timeNow = Math.round(Date.now() / 1000);\n\n                if (!(expiresAt < timeNow + EXPIRY_MARGIN)) {\n                  _context12.next = 29;\n                  break;\n                }\n\n                if (!(this.autoRefreshToken && currentSession.refresh_token)) {\n                  _context12.next = 26;\n                  break;\n                }\n\n                this.networkRetries++;\n                _context12.next = 13;\n                return this._callRefreshToken(currentSession.refresh_token);\n\n              case 13:\n                _yield$this$_callRefr3 = _context12.sent;\n                error = _yield$this$_callRefr3.error;\n\n                if (!error) {\n                  _context12.next = 23;\n                  break;\n                }\n\n                console.log(error.message);\n\n                if (!(error.message === NETWORK_FAILURE.ERROR_MESSAGE && this.networkRetries < NETWORK_FAILURE.MAX_RETRIES)) {\n                  _context12.next = 21;\n                  break;\n                }\n\n                if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n                this.refreshTokenTimer = setTimeout(function () {\n                  return _this2._recoverAndRefresh();\n                }, Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100 // exponential backoff\n                );\n                return _context12.abrupt(\"return\");\n\n              case 21:\n                _context12.next = 23;\n                return this._removeSession();\n\n              case 23:\n                this.networkRetries = 0;\n                _context12.next = 27;\n                break;\n\n              case 26:\n                this._removeSession();\n\n              case 27:\n                _context12.next = 30;\n                break;\n\n              case 29:\n                if (!currentSession) {\n                  console.log('Current session is missing data.');\n\n                  this._removeSession();\n                } else {\n                  // should be handled on _recoverSession method already\n                  // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                  this._saveSession(currentSession);\n\n                  this._notifyAllSubscribers('SIGNED_IN');\n                }\n\n              case 30:\n                _context12.next = 36;\n                break;\n\n              case 32:\n                _context12.prev = 32;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.error(_context12.t0);\n                return _context12.abrupt(\"return\", null);\n\n              case 36:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[0, 32]]);\n      }));\n    }\n  }, {\n    key: \"_callRefreshToken\",\n    value: function _callRefreshToken(refresh_token) {\n      var _a;\n\n      if (refresh_token === void 0) {\n        refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token;\n      }\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var _yield$this$api$refre2, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n\n                if (refresh_token) {\n                  _context13.next = 3;\n                  break;\n                }\n\n                throw new Error('No current session.');\n\n              case 3:\n                _context13.next = 5;\n                return this.api.refreshAccessToken(refresh_token);\n\n              case 5:\n                _yield$this$api$refre2 = _context13.sent;\n                data = _yield$this$api$refre2.data;\n                error = _yield$this$api$refre2.error;\n\n                if (!error) {\n                  _context13.next = 10;\n                  break;\n                }\n\n                throw error;\n\n              case 10:\n                if (data) {\n                  _context13.next = 12;\n                  break;\n                }\n\n                throw Error('Invalid session data.');\n\n              case 12:\n                this._saveSession(data);\n\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n\n                this._notifyAllSubscribers('SIGNED_IN');\n\n                return _context13.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n\n              case 18:\n                _context13.prev = 18;\n                _context13.t0 = _context13[\"catch\"](0);\n                return _context13.abrupt(\"return\", {\n                  data: null,\n                  error: _context13.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[0, 18]]);\n      }));\n    }\n  }, {\n    key: \"_notifyAllSubscribers\",\n    value: function _notifyAllSubscribers(event) {\n      var _this3 = this;\n\n      this.stateChangeEmitters.forEach(function (x) {\n        return x.callback(event, _this3.currentSession);\n      });\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n\n  }, {\n    key: \"_saveSession\",\n    value: function _saveSession(session) {\n      this.currentSession = session;\n      this.currentUser = session.user;\n      var expiresAt = session.expires_at;\n\n      if (expiresAt) {\n        var timeNow = Math.round(Date.now() / 1000);\n        var expiresIn = expiresAt - timeNow;\n        var refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5;\n\n        this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n      } // Do we need any extra check before persist session\n      // access_token or user ?\n\n\n      if (this.persistSession && session.expires_at) {\n        this._persistSession(this.currentSession);\n      }\n    }\n  }, {\n    key: \"_persistSession\",\n    value: function _persistSession(currentSession) {\n      var data = {\n        currentSession: currentSession,\n        expiresAt: currentSession.expires_at\n      };\n      setItemAsync(this.localStorage, STORAGE_KEY, data);\n    }\n  }, {\n    key: \"_removeSession\",\n    value: function _removeSession() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this.currentSession = null;\n                this.currentUser = null;\n                if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n                removeItemAsync(this.localStorage, STORAGE_KEY);\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n\n  }, {\n    key: \"_startAutoRefreshToken\",\n    value: function _startAutoRefreshToken(value) {\n      var _this4 = this;\n\n      if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer);\n      if (value <= 0 || !this.autoRefreshToken) return;\n      this.refreshTokenTimer = setTimeout(function () {\n        return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n          var _yield$this$_callRefr4, error;\n\n          return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  this.networkRetries++;\n                  _context15.next = 3;\n                  return this._callRefreshToken();\n\n                case 3:\n                  _yield$this$_callRefr4 = _context15.sent;\n                  error = _yield$this$_callRefr4.error;\n                  if (!error) this.networkRetries = 0;\n                  if ((error === null || error === void 0 ? void 0 : error.message) === NETWORK_FAILURE.ERROR_MESSAGE && this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) this._startAutoRefreshToken(Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100); // exponential backoff\n\n                case 7:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15, this);\n        }));\n      }, value);\n      if (typeof this.refreshTokenTimer.unref === 'function') this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n\n  }, {\n    key: \"_listenForMultiTabEvents\",\n    value: function _listenForMultiTabEvents() {\n      var _this5 = this;\n\n      if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        return false;\n      }\n\n      try {\n        window === null || window === void 0 ? void 0 : window.addEventListener('storage', function (e) {\n          var _a;\n\n          if (e.key === STORAGE_KEY) {\n            var newSession = JSON.parse(String(e.newValue));\n\n            if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n              _this5._saveSession(newSession.currentSession);\n\n              _this5._notifyAllSubscribers('SIGNED_IN');\n            } else {\n              _this5._removeSession();\n\n              _this5._notifyAllSubscribers('SIGNED_OUT');\n            }\n          }\n        });\n      } catch (error) {\n        console.error('_listenForMultiTabEvents', error);\n      }\n    }\n  }, {\n    key: \"_handleVisibilityChange\",\n    value: function _handleVisibilityChange() {\n      var _this6 = this;\n\n      if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        return false;\n      }\n\n      try {\n        window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', function () {\n          if (document.visibilityState === 'visible') {\n            _this6._recoverAndRefresh();\n          }\n        });\n      } catch (error) {\n        console.error('_handleVisibilityChange', error);\n      }\n    }\n  }]);\n\n  return GoTrueClient;\n}();\n\nexport { GoTrueClient as default };","map":{"version":3,"mappings":"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","names":["GoTrueApi","isBrowser","getParameterByName","uuid","setItemAsync","removeItemAsync","getItemSynchronously","getItemAsync","GOTRUE_URL","DEFAULT_HEADERS","STORAGE_KEY","EXPIRY_MARGIN","NETWORK_FAILURE","polyfillGlobalThis","DEFAULT_OPTIONS","url","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","headers","GoTrueClient","options","Map","settings","currentUser","currentSession","localStorage","globalThis","api","cookieOptions","fetch","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","_handleVisibilityChange","getSessionFromUrl","storeSession","then","error","console","email","password","phone","_removeSession","signUpWithPhone","data","captchaToken","signUpWithEmail","redirectTo","session","user","access_token","_saveSession","_notifyAllSubscribers","id","refreshToken","provider","oidc","sendMagicLinkEmail","shouldCreateUser","_handleEmailSignIn","sendMobileOTP","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","scopes","_handleOpenIDConnectSignIn","Error","params","verifyOTP","_a","attributes","updateUser","Object","refresh_token","refreshAccessToken","token_type","error_description","provider_token","expires_in","timeNow","Math","round","Date","now","expires_at","parseInt","getUser","recoveryMode","window","location","hash","accessToken","signOut","callback","subscription","unsubscribe","stateChangeEmitters","delete","set","e","signInWithEmail","confirmed_at","_b","email_confirmed_at","signInWithPhone","phone_confirmed_at","getUrlForProvider","href","id_token","nonce","client_id","issuer","signInWithOpenIDConnect","expiresAt","log","networkRetries","message","ERROR_MESSAGE","MAX_RETRIES","refreshTokenTimer","clearTimeout","setTimeout","RETRY_INTERVAL","event","forEach","x","expiresIn","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","value","__awaiter","unref","addEventListener","key","newSession","JSON","parse","String","newValue","document","visibilityState"],"sourceRoot":"","sources":["../../src/GoTrueClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}