{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nvar RealtimePresence = /*#__PURE__*/function () {\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeSubscription\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  function RealtimePresence(channel, opts) {\n    var _this = this;\n\n    _classCallCheck(this, RealtimePresence);\n\n    this.channel = channel;\n    this.state = {};\n    this.pendingDiffs = [];\n    this.joinRef = null;\n    this.caller = {\n      onJoin: function onJoin() {},\n      onLeave: function onLeave() {},\n      onSync: function onSync() {}\n    };\n    var events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n      state: 'presence_state',\n      diff: 'presence_diff'\n    };\n    this.channel.on(events.state, {}, function (newState) {\n      var _this$caller = _this.caller,\n          onJoin = _this$caller.onJoin,\n          onLeave = _this$caller.onLeave,\n          onSync = _this$caller.onSync;\n      _this.joinRef = _this.channel.joinRef();\n      _this.state = RealtimePresence.syncState(_this.state, newState, onJoin, onLeave);\n\n      _this.pendingDiffs.forEach(function (diff) {\n        _this.state = RealtimePresence.syncDiff(_this.state, diff, onJoin, onLeave);\n      });\n\n      _this.pendingDiffs = [];\n      onSync();\n    });\n    this.channel.on(events.diff, {}, function (diff) {\n      var _this$caller2 = _this.caller,\n          onJoin = _this$caller2.onJoin,\n          onLeave = _this$caller2.onLeave,\n          onSync = _this$caller2.onSync;\n\n      if (_this.inPendingSyncState()) {\n        _this.pendingDiffs.push(diff);\n      } else {\n        _this.state = RealtimePresence.syncDiff(_this.state, diff, onJoin, onLeave);\n        onSync();\n      }\n    });\n  }\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   */\n\n\n  _createClass(RealtimePresence, [{\n    key: \"onJoin\",\n    value: function onJoin(callback) {\n      this.caller.onJoin = callback;\n    }\n  }, {\n    key: \"onLeave\",\n    value: function onLeave(callback) {\n      this.caller.onLeave = callback;\n    }\n  }, {\n    key: \"onSync\",\n    value: function onSync(callback) {\n      this.caller.onSync = callback;\n    }\n  }, {\n    key: \"list\",\n    value: function list(by) {\n      return RealtimePresence.list(this.state, by);\n    }\n  }, {\n    key: \"inPendingSyncState\",\n    value: function inPendingSyncState() {\n      return !this.joinRef || this.joinRef !== this.channel.joinRef();\n    }\n  }], [{\n    key: \"syncState\",\n    value: function syncState(currentState, newState, onJoin, onLeave) {\n      var state = this.cloneDeep(currentState);\n      var transformedState = this.transformState(newState);\n      var joins = {};\n      var leaves = {};\n      this.map(state, function (key, presences) {\n        if (!transformedState[key]) {\n          leaves[key] = presences;\n        }\n      });\n      this.map(transformedState, function (key, newPresences) {\n        var currentPresences = state[key];\n\n        if (currentPresences) {\n          var newPresenceIds = newPresences.map(function (m) {\n            return m.presence_id;\n          });\n          var curPresenceIds = currentPresences.map(function (m) {\n            return m.presence_id;\n          });\n          var joinedPresences = newPresences.filter(function (m) {\n            return curPresenceIds.indexOf(m.presence_id) < 0;\n          });\n          var leftPresences = currentPresences.filter(function (m) {\n            return newPresenceIds.indexOf(m.presence_id) < 0;\n          });\n\n          if (joinedPresences.length > 0) {\n            joins[key] = joinedPresences;\n          }\n\n          if (leftPresences.length > 0) {\n            leaves[key] = leftPresences;\n          }\n        } else {\n          joins[key] = newPresences;\n        }\n      });\n      return this.syncDiff(state, {\n        joins: joins,\n        leaves: leaves\n      }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     */\n\n  }, {\n    key: \"syncDiff\",\n    value: function syncDiff(state, diff, onJoin, onLeave) {\n      var _this2 = this;\n\n      var _joins$leaves = {\n        joins: this.transformState(diff.joins),\n        leaves: this.transformState(diff.leaves)\n      },\n          joins = _joins$leaves.joins,\n          leaves = _joins$leaves.leaves;\n\n      if (!onJoin) {\n        onJoin = function onJoin() {};\n      }\n\n      if (!onLeave) {\n        onLeave = function onLeave() {};\n      }\n\n      this.map(joins, function (key, newPresences) {\n        var currentPresences = state[key];\n        state[key] = _this2.cloneDeep(newPresences);\n\n        if (currentPresences) {\n          var _state$key;\n\n          var joinedPresenceIds = state[key].map(function (m) {\n            return m.presence_id;\n          });\n          var curPresences = currentPresences.filter(function (m) {\n            return joinedPresenceIds.indexOf(m.presence_id) < 0;\n          });\n\n          (_state$key = state[key]).unshift.apply(_state$key, _toConsumableArray(curPresences));\n        }\n\n        onJoin(key, currentPresences, newPresences);\n      });\n      this.map(leaves, function (key, leftPresences) {\n        var currentPresences = state[key];\n        if (!currentPresences) return;\n        var presenceIdsToRemove = leftPresences.map(function (m) {\n          return m.presence_id;\n        });\n        currentPresences = currentPresences.filter(function (m) {\n          return presenceIdsToRemove.indexOf(m.presence_id) < 0;\n        });\n        state[key] = currentPresences;\n        onLeave(key, currentPresences, leftPresences);\n        if (currentPresences.length === 0) delete state[key];\n      });\n      return state;\n    }\n    /**\n     * Returns the array of presences, with selected metadata.\n     */\n\n  }, {\n    key: \"list\",\n    value: function list(presences, chooser) {\n      if (!chooser) {\n        chooser = function chooser(_key, pres) {\n          return pres;\n        };\n      }\n\n      return this.map(presences, function (key, presences) {\n        return chooser(key, presences);\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(obj, func) {\n      return Object.getOwnPropertyNames(obj).map(function (key) {\n        return func(key, obj[key]);\n      });\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_id'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_id: '2', user_id: 1 },\n     *    { presence_id: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     */\n\n  }, {\n    key: \"transformState\",\n    value: function transformState(state) {\n      state = this.cloneDeep(state);\n      return Object.getOwnPropertyNames(state).reduce(function (newState, key) {\n        var presences = state[key];\n\n        if ('metas' in presences) {\n          newState[key] = presences.metas.map(function (presence) {\n            presence['presence_id'] = presence['phx_ref'];\n            delete presence['phx_ref'];\n            delete presence['phx_ref_prev'];\n            return presence;\n          });\n        } else {\n          newState[key] = presences;\n        }\n\n        return newState;\n      }, {});\n    }\n  }, {\n    key: \"cloneDeep\",\n    value: function cloneDeep(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }]);\n\n  return RealtimePresence;\n}();\n\nexport { RealtimePresence as default };","map":{"version":3,"mappings":"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","names":["RealtimePresence","channel","opts","onJoin","onLeave","onSync","events","state","diff","on","newState","caller","joinRef","syncState","pendingDiffs","forEach","syncDiff","inPendingSyncState","push","callback","by","list","currentState","cloneDeep","transformedState","transformState","joins","leaves","map","key","presences","newPresences","currentPresences","newPresenceIds","m","presence_id","curPresenceIds","joinedPresences","filter","indexOf","leftPresences","length","joinedPresenceIds","curPresences","unshift","presenceIdsToRemove","chooser","_key","pres","obj","func","Object","getOwnPropertyNames","reduce","metas","presence","JSON","parse","stringify"],"sourceRoot":"","sources":["../../src/RealtimePresence.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}