{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ericl/findabudbud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport RealtimeChannel from './RealtimeChannel';\n\nvar noop = function noop() {};\n\nvar RealtimeClient = /*#__PURE__*/function () {\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  function RealtimeClient(endPoint, options) {\n    var _this = this;\n\n    _classCallCheck(this, RealtimeClient);\n\n    this.accessToken = null;\n    this.channels = [];\n    this.endPoint = '';\n    this.headers = DEFAULT_HEADERS;\n    this.params = {};\n    this.timeout = DEFAULT_TIMEOUT;\n    this.transport = w3cwebsocket;\n    this.heartbeatIntervalMs = 30000;\n    this.longpollerTimeout = 20000;\n    this.heartbeatTimer = undefined;\n    this.pendingHeartbeatRef = null;\n    this.ref = 0;\n    this.logger = noop;\n    this.conn = null;\n    this.sendBuffer = [];\n    this.serializer = new Serializer();\n    this.stateChangeCallbacks = {\n      open: [],\n      close: [],\n      error: [],\n      message: []\n    };\n    this.endPoint = \"\".concat(endPoint, \"/\").concat(TRANSPORTS.websocket);\n    if (options === null || options === void 0 ? void 0 : options.params) this.params = options.params;\n    if (options === null || options === void 0 ? void 0 : options.headers) this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n    if (options === null || options === void 0 ? void 0 : options.timeout) this.timeout = options.timeout;\n    if (options === null || options === void 0 ? void 0 : options.logger) this.logger = options.logger;\n    if (options === null || options === void 0 ? void 0 : options.transport) this.transport = options.transport;\n    if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs) this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n    if (options === null || options === void 0 ? void 0 : options.longpollerTimeout) this.longpollerTimeout = options.longpollerTimeout;\n    this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs : function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode : function (payload, callback) {\n      return callback(JSON.stringify(payload));\n    };\n    this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode : this.serializer.decode.bind(this.serializer);\n    this.reconnectTimer = new Timer(function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.disconnect();\n\n              case 2:\n                this.connect();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }, this.reconnectAfterMs);\n  }\n  /**\n   * Connects the socket, unless already connected.\n   */\n\n\n  _createClass(RealtimeClient, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n\n      if (this.conn) {\n        // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n        this.conn.binaryType = 'arraybuffer';\n\n        this.conn.onopen = function () {\n          return _this2._onConnOpen();\n        };\n\n        this.conn.onerror = function (error) {\n          return _this2._onConnError(error);\n        };\n\n        this.conn.onmessage = function (event) {\n          return _this2.onConnMessage(event);\n        };\n\n        this.conn.onclose = function (event) {\n          return _this2._onConnClose(event);\n        };\n      }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(code, reason) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, _reject) {\n        try {\n          if (_this3.conn) {\n            _this3.conn.onclose = function () {}; // noop\n\n\n            if (code) {\n              _this3.conn.close(code, reason || '');\n            } else {\n              _this3.conn.close();\n            }\n\n            _this3.conn = null; // remove open handles\n\n            _this3.heartbeatTimer && clearInterval(_this3.heartbeatTimer);\n\n            _this3.reconnectTimer.reset();\n          }\n\n          resolve({\n            error: null,\n            data: true\n          });\n        } catch (error) {\n          resolve({\n            error: error,\n            data: false\n          });\n        }\n      });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overriden.\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     *\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return CONNECTION_STATE.Connecting;\n\n        case SOCKET_STATES.open:\n          return CONNECTION_STATE.Open;\n\n        case SOCKET_STATES.closing:\n          return CONNECTION_STATE.Closing;\n\n        default:\n          return CONNECTION_STATE.Closed;\n      }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _a;\n\n      var selfBroadcast = chanParams.selfBroadcast,\n          params = __rest(chanParams, [\"selfBroadcast\"]);\n\n      if (selfBroadcast) {\n        params.self_broadcast = selfBroadcast;\n      }\n\n      var chan = ((_a = this.params) === null || _a === void 0 ? void 0 : _a.vsndate) ? new RealtimeChannel(topic, params, this) : new RealtimeSubscription(topic, params, this);\n\n      if (chan instanceof RealtimeChannel) {\n        chan.presence.onJoin(function (key, currentPresences, newPresences) {\n          chan.trigger('presence', {\n            event: 'JOIN',\n            key: key,\n            currentPresences: currentPresences,\n            newPresences: newPresences\n          });\n        });\n        chan.presence.onLeave(function (key, currentPresences, leftPresences) {\n          chan.trigger('presence', {\n            event: 'LEAVE',\n            key: key,\n            currentPresences: currentPresences,\n            leftPresences: leftPresences\n          });\n        });\n        chan.presence.onSync(function () {\n          chan.trigger('presence', {\n            event: 'SYNC'\n          });\n        });\n      }\n\n      this.channels.push(chan);\n      return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this4 = this;\n\n      var topic = data.topic,\n          event = data.event,\n          payload = data.payload,\n          ref = data.ref;\n\n      var callback = function callback() {\n        _this4.encode(data, function (result) {\n          var _a;\n\n          (_a = _this4.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n        });\n      };\n\n      this.log('push', \"\".concat(topic, \" \").concat(event, \" (\").concat(ref, \")\"), payload);\n\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var _this5 = this;\n\n      this.decode(rawMessage.data, function (msg) {\n        var topic = msg.topic,\n            event = msg.event,\n            payload = msg.payload,\n            ref = msg.ref;\n\n        if (ref && ref === _this5.pendingHeartbeatRef || event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n          _this5.pendingHeartbeatRef = null;\n        }\n\n        _this5.log('receive', \"\".concat(payload.status || '', \" \").concat(topic, \" \").concat(event, \" \").concat(ref && '(' + ref + ')' || ''), payload);\n\n        _this5.channels.filter(function (channel) {\n          return channel.isMember(topic);\n        }).forEach(function (channel) {\n          return channel.trigger(event, payload, ref);\n        });\n\n        _this5.stateChangeCallbacks.message.forEach(function (callback) {\n          return callback(msg);\n        });\n      });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      return this._appendParams(this.endPoint, Object.assign({}, this.params, {\n        vsn: VSN\n      }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n\n  }, {\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.accessToken = token;\n      this.channels.forEach(function (channel) {\n        token && channel.updateJoinPayload({\n          user_token: token\n        });\n\n        if (channel.joinedOnce && channel.isJoined()) {\n          channel.push(CHANNEL_EVENTS.access_token, {\n            access_token: token\n          });\n        }\n      });\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     */\n\n  }, {\n    key: \"leaveOpenTopic\",\n    value: function leaveOpenTopic(topic) {\n      var dupChannel = this.channels.find(function (c) {\n        return c.topic === topic && (c.isJoined() || c.isJoining());\n      });\n\n      if (dupChannel) {\n        this.log('transport', \"leaving duplicate topic \\\"\".concat(topic, \"\\\"\"));\n        dupChannel.unsubscribe();\n      }\n    }\n  }, {\n    key: \"_onConnOpen\",\n    value: function _onConnOpen() {\n      var _this6 = this;\n\n      this.log('transport', \"connected to \".concat(this.endPointURL()));\n\n      this._flushSendBuffer();\n\n      this.reconnectTimer.reset();\n      this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n      this.heartbeatTimer = setInterval(function () {\n        return _this6._sendHeartbeat();\n      }, this.heartbeatIntervalMs);\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"_onConnClose\",\n    value: function _onConnClose(event) {\n      this.log('transport', 'close', event);\n\n      this._triggerChanError();\n\n      this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"_onConnError\",\n    value: function _onConnError(error) {\n      this.log('transport', error.message);\n\n      this._triggerChanError();\n\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"_triggerChanError\",\n    value: function _triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"_appendParams\",\n    value: function _appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? '&' : '?';\n      var query = new URLSearchParams(params);\n      return \"\".concat(url).concat(prefix).concat(query);\n    }\n  }, {\n    key: \"_flushSendBuffer\",\n    value: function _flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"_sendHeartbeat\",\n    value: function _sendHeartbeat() {\n      var _a;\n\n      if (!this.isConnected()) {\n        return;\n      }\n\n      if (this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null;\n        this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n        (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n        return;\n      }\n\n      this.pendingHeartbeatRef = this.makeRef();\n      this.push({\n        topic: 'phoenix',\n        event: 'heartbeat',\n        payload: {},\n        ref: this.pendingHeartbeatRef\n      });\n      this.setAuth(this.accessToken);\n    }\n  }]);\n\n  return RealtimeClient;\n}();\n\nexport { RealtimeClient as default };","map":{"version":3,"mappings":"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","names":["w3cwebsocket","VSN","CHANNEL_EVENTS","TRANSPORTS","SOCKET_STATES","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","DEFAULT_HEADERS","CONNECTION_STATE","Timer","Serializer","RealtimeSubscription","RealtimeChannel","noop","RealtimeClient","endPoint","options","undefined","open","close","error","message","websocket","params","headers","Object","timeout","logger","transport","heartbeatIntervalMs","longpollerTimeout","reconnectAfterMs","tries","encode","payload","callback","JSON","stringify","decode","serializer","bind","reconnectTimer","__awaiter","disconnect","connect","conn","endPointURL","binaryType","onopen","_onConnOpen","onerror","_onConnError","onmessage","event","onConnMessage","onclose","_onConnClose","code","reason","Promise","resolve","_reject","heartbeatTimer","clearInterval","reset","data","kind","msg","stateChangeCallbacks","push","readyState","connecting","Connecting","Open","closing","Closing","Closed","connectionState","channel","channels","filter","c","joinRef","topic","chanParams","selfBroadcast","__rest","self_broadcast","chan","_a","vsndate","presence","onJoin","key","currentPresences","newPresences","trigger","onLeave","leftPresences","onSync","ref","result","send","log","isConnected","sendBuffer","rawMessage","pendingHeartbeatRef","type","status","isMember","forEach","_appendParams","assign","vsn","newRef","toString","token","accessToken","updateJoinPayload","user_token","joinedOnce","isJoined","access_token","dupChannel","find","isJoining","unsubscribe","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","scheduleTimeout","url","keys","length","prefix","match","query","URLSearchParams","makeRef","setAuth"],"sourceRoot":"","sources":["../../src/RealtimeClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}